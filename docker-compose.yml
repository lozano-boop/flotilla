version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flotilla-app
    environment:
      NODE_ENV: production
      PORT: 8080
      # Dentro de la red de Docker, Postgres se llama 'db'
      DATABASE_URL: postgres://flotilla:flotilla@db:5432/flotilla
      # Si se define NEON_DATABASE_URL, la app lo usar√° en lugar de DATABASE_URL
      NEON_DATABASE_URL: ${NEON_DATABASE_URL}
      NODE_OPTIONS: "--max-old-space-size=256"
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "sh", "-c", "wget -qO- http://127.0.0.1:8080 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  adminer:
    image: adminer:4
    container_name: flotilla-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:16
    container_name: flotilla-postgres
    environment:
      POSTGRES_USER: flotilla
      POSTGRES_PASSWORD: flotilla
      POSTGRES_DB: flotilla
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flotilla -d flotilla"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  proxy:
    image: caddy:2
    container_name: flotilla-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app
      - db
    restart: unless-stopped

volumes:
  caddy_data:
  caddy_config:
  pg_data:
